import Head from "next/head";
// ----------------------------------------------
import React, { useState } from "react";
import { loadStripe } from "@stripe/stripe-js";
import { CardElement, Elements } from "@stripe/react-stripe-js";

// const stripePromise = loadStripe("YOUR_PUBLISHABLE_KEY");
const stripePromise = loadStripe(process.env.NEXT_PUBLIC_STRIPE_SECRET_KEY);

// ----------------------------------------------

function Home() {
  const [amount, setAmount] = useState("");
  const [error, setError] = useState(null);
  const [success, setSuccess] = useState(false);

  const handleSubmit = async (event) => {
    event.preventDefault();
    setError(null);
    setSuccess(false);

    try {
      // Call the server to create a payment intent
      // const response = await fetch("/api/create-payment-intent", {
      const response = await fetch(
        "http://localhost:3000/api/create-payment-intent",
        {
          method: "POST",
          headers: { "Content-Type": "application/json" },
          // headers: { "Content-Type": "application/x-www-form-urlencoded" },
          body: JSON.stringify({ amount }),
        }
      );

      const data = await response.json();
      console.log("Data " + response);

      if (!data.client_secret) {
        throw new Error("PaymentIntent was not created");
      }

      // Use the client_secret from the response to confirm the payment
      const stripe = await stripePromise;
      const result = await stripe.confirmCardPayment(data.client_secret, {
        payment_method: {
          card: CardElement,
          billing_details: {
            name: "Shayan",
          },
        },
      });

      if (result.error) {
        setError(result.error.message);
      } else {
        setSuccess(true);
      }
    } catch (error) {
      setError(error.message);
    }
  };

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <form
        onSubmit={handleSubmit}
        style={{ display: "grid", placeItems: "center", height: "80vh" }}
      >
        <div>
          <label htmlFor="amount">
            Amount:
            <input
              type="number"
              id="amount"
              value={amount}
              onChange={(e) => setAmount(e.target.value)}
            />
          </label>
          {/* <CardElement /> */}
          <button type="submit">Pay</button>
          {error && <p style={{ color: "red" }}>{error}</p>}
          {success && <p style={{ color: "green" }}>Payment successful</p>}
        </div>
      </form>
    </>
  );
}

export default function Checkout() {
  return (
    <Elements stripe={stripePromise}>
      <Home />
    </Elements>
  );
}
